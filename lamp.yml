---
- name: Setting up LAMP Website
  hosts: db
  become: yes
  gather_facts: true
  ignore_errors: true
  vars:
    ansible_hostname: 0.0.0.0
  tasks:
    - name: Update package repositories for Debian/Ubuntu
      apt:
        update_cache: yes
      when: "ansible_os_family == 'Debian' or ansible_os_family == 'Ubuntu'"

    - name: Update package repositories for Amazon Linux
      yum:
        name: '*'
        state: latest
      when: "ansible_os_family == 'RedHat' or ansible_os_family == 'Amazon'"
 
    - name: Determine package name for MariaDB on Debian/Ubuntu
      set_fact:
        mariadb_package_name: "{{ 'mariadb-server' if ansible_distribution == 'Debian' else 'mysql-server' }}"
      when: "ansible_os_family == 'Debian' or ansible_os_family == 'Ubuntu'"
    - name: Install required packages for Debian/Ubuntu
      apt:
        name:
          - apache2
          - "{{ mariadb_package_name }}"
          - php
          - libapache2-mod-php
          - php-mysql
        state: present
      when: "ansible_os_family == 'Debian' or ansible_os_family == 'Ubuntu'"

    - name: Install required packages for Amazon Linux
      yum:
        name:
          - httpd
          - mariadb-server
          - php
          - php-mysql
        state: present
      when: "ansible_os_family == 'RedHat' or ansible_os_family == 'Amazon'"

    - name: Ensure firewalld is installed and enabled (for Amazon Linux)
      package:
        name: firewalld
        state: present
      when: "ansible_os_family == 'RedHat' or ansible_os_family == 'Amazon'"
    - name: Start and enable Apache for Amazon Linux
      service:
        name: httpd
        enabled: yes
        state: started
      when: "ansible_os_family == 'RedHat' or ansible_os_family == 'Amazon'"

    - name: Start and enable MariaDB for Amazon Linux
      service:
        name: mariadb
        enabled: yes
        state: started
      when: "ansible_os_family == 'RedHat' or ansible_os_family == 'Amazon'"

    - name: Install unzip on Debian/Ubuntu
      apt:
        name: unzip
        state: present
      when: ansible_os_family == "Debian" or ansible_os_family == "Ubuntu"

    - name: Install unzip on RedHat/Amazon Linux
      yum:
        name: unzip
        state: present
      when: ansible_os_family == "RedHat" or ansible_os_family == "Amazon"

    - name: Download startboostrap template
      get_url:
        url: "https://github.com/startbootstrap/startbootstrap-business-frontpage/archive/gh-pages.zip"
        dest: /tmp/startbootstrap-business-frontpage-gh-pages.zip
        mode: 0755

    - name: Unzip the downloaded template
      unarchive:
        src: /tmp/startbootstrap-business-frontpage-gh-pages.zip
        dest: /var/www/html/
        remote_src: yes

    - name: Rename extracted folder
      command:
        cmd: mv /var/www/html/startbootstrap-business-frontpage-gh-pages /var/www/html/test
        creates: /var/www/html/test